syntax = "proto3";

package keruberosu.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/asakaida/keruberosu/proto/keruberosu/v1;keruberosupb";

// ========================================
// 共通メッセージ型（全サービスで共有）
// ========================================

message Entity {
  string type = 1;  // e.g., "document"
  string id = 2;    // e.g., "doc1"
}

message Subject {
  string type = 1;     // e.g., "user"
  string id = 2;       // e.g., "alice"
  string relation = 3; // optional: e.g., "member" for "@organization#member"
}

message SubjectReference {
  string type = 1;     // e.g., "user"
  string relation = 2; // optional: 特定のrelationに限定する場合
}

// Permify互換: Tuple
message Tuple {
  Entity entity = 1;
  string relation = 2;
  Subject subject = 3;
}

// Permify互換: Attribute
message Attribute {
  Entity entity = 1;
  string attribute = 2;
  google.protobuf.Value value = 3;
}

message PermissionCheckMetadata {
  string snap_token = 1;     // スナップショットトークン（optional）
  int32 depth = 2;           // 再帰クエリの深さ制限（default: 50）
  bool only_permission = 3;  // SubjectPermission用: permissionのみ返す
  string schema_version = 4; // スキーマバージョンID（optional、空の場合は最新）
}

message Context {
  repeated Tuple tuples = 1;
  repeated Attribute attributes = 2;
}

// Permify互換: タプルフィルター（DeleteRelations、ReadRelationships用）
message TupleFilter {
  EntityFilter entity = 1;
  string relation = 2;
  SubjectFilter subject = 3;
}

message EntityFilter {
  string type = 1;
  repeated string ids = 2;  // 複数ID指定可能
}

message SubjectFilter {
  string type = 1;
  repeated string ids = 2;  // 複数ID指定可能
  string relation = 3;
}

// 属性フィルター（AttributeReadRequest用）
message AttributeFilter {
  EntityFilter entity = 1;
  repeated string attributes = 2;  // 属性名のリスト
}

// Permify互換: Expand (ツリー展開結果)
message Expand {
  oneof node {
    ExpandTreeNode expand = 1;
    ExpandLeaf leaf = 2;
  }
}

message ExpandTreeNode {
  enum Operation {
    OPERATION_UNSPECIFIED = 0;
    OPERATION_UNION = 1;
    OPERATION_INTERSECTION = 2;
    OPERATION_EXCLUSION = 3;
  }
  Operation operation = 1;
  repeated Expand children = 2;
}

message ExpandLeaf {
  oneof type {
    Subjects subjects = 1;
    Values values = 2;
    google.protobuf.Any value = 3;
  }
}

message Subjects {
  repeated Subject subjects = 1;
}

message Values {
  map<string, google.protobuf.Value> values = 1;
}

// Permify互換: 文字列配列（scope等で使用）
message StringArrayValue {
  repeated string data = 1;
}

enum CheckResult {
  CHECK_RESULT_UNSPECIFIED = 0;
  CHECK_RESULT_ALLOWED = 1;
  CHECK_RESULT_DENIED = 2;
}
